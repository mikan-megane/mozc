name: CI for Windows
# https://github.com/google/mozc/blob/master/docs/build_mozc_in_windows.md

on: workflow_dispatch

permissions: read-all

# Prevent previous workflows from running.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build_ut:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tools repo
        uses: actions/checkout@v4
        with:
          repository: utuhiro78/merge-ut-dictionaries
      - name: build
        working-directory: src/merge
        run: |
          sh make.sh
          mv mozcdic-ut.txt ../../
      - uses: actions/upload-artifact@v4
        with:
          name: mozcdic-ut.txt
          path: mozcdic-ut.txt

  build_x64:
    # https://github.com/actions/runner-images/blob/main/images/windows/Windows2025-Readme.md
    runs-on: windows-2025
    timeout-minutes: 120
    needs: build_ut

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: actions/download-artifact@v4
        with:
          name: mozcdic-ut.txt

      - name: marge dict
        shell: cmd
        run: |
          type mozcdic-ut.txt >> src/data/dictionary_oss/dictionary00.txt

      - name: Try to restore update_deps cache
        uses: actions/cache@v4
        with:
          path: src/third_party_cache
          key: update_deps-${{ runner.os }}-${{ hashFiles('src/build_tools/update_deps.py') }}

      - name: Install Dependencies
        shell: cmd
        working-directory: .\src
        # This command uses src/third_party_cache as the download cache.
        run: |
          python build_tools/update_deps.py

      - name: Build Qt
        shell: cmd
        working-directory: .\src
        run: |
          python build_tools/build_qt.py --release --confirm_license

      # This is needed only for GitHub Actions where free disk space is quite limited.
      - name: Delete Qt src to save disk space
        shell: cmd
        working-directory: .\src
        run: |
          rmdir third_party\qt_src /s /q

      - name: build artifacts
        shell: cmd
        working-directory: .\src
        env:
          ANDROID_NDK_HOME: ""
        run: |
          bazelisk build --config oss_windows --config release_build package

      - name: upload Mozc64_x64.msi
        uses: actions/upload-artifact@v4
        with:
          name: Mozc64_x64.msi
          path: src/bazel-bin/win32/installer/Mozc64.msi
          if-no-files-found: warn
